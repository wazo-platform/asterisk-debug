commit d83a46869ed5e13d0ed5a898bac8faed61d91203
Author: Joshua C. Colp <jcolp@sangoma.com>
Date:   Mon Dec 27 09:28:00 2021 -0400

    bridge: Unlock channel during Local peer check.
    
    It's not safe to keep the channel locked while locking
    the peer Local channel, as it can result in a deadlock.
    
    This change unlocks it during this time but keeps the
    bridge locked to ensure nothing changes about the bridge.
    
    ASTERISK-29821
    
    Change-Id: Ib68eb7037e5a479bcc2aceee77337cdde1fbdde6

Index: asterisk-18.9.0/main/bridge_channel.c
===================================================================
--- asterisk-18.9.0.orig/main/bridge_channel.c
+++ asterisk-18.9.0/main/bridge_channel.c
@@ -2877,11 +2877,13 @@ int bridge_channel_internal_join(struct
 	ast_bridge_lock(bridge_channel->bridge);
 
 	ast_channel_lock(bridge_channel->chan);
-
 	peer = ast_local_get_peer(bridge_channel->chan);
+
 	if (peer) {
 		struct ast_bridge *peer_bridge;
 
+		ast_channel_unlock(bridge_channel->chan);
+
 		ast_channel_lock(peer);
 		peer_bridge = ast_channel_internal_bridge(peer);
 		ast_channel_unlock(peer);
@@ -2891,7 +2893,6 @@ int bridge_channel_internal_join(struct
 		 * to be reference counted or locked.
 		 */
 		if (peer_bridge == bridge_channel->bridge) {
-			ast_channel_unlock(bridge_channel->chan);
 			ast_bridge_unlock(bridge_channel->bridge);
 			ast_debug(1, "Bridge %s: %p(%s) denying Bridge join to prevent Local channel loop\n",
 				bridge_channel->bridge->uniqueid,
@@ -2899,6 +2900,8 @@ int bridge_channel_internal_join(struct
 				ast_channel_name(bridge_channel->chan));
 			return -1;
 		}
+
+		ast_channel_lock(bridge_channel->chan);
 	}
 
 	bridge_channel->read_format = ao2_bump(ast_channel_readformat(bridge_channel->chan));
